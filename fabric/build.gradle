plugins {
    id 'com.github.johnrengelman.shadow'
}

architectury {
    platformSetupLoomIde()
    fabric()
}

loom {
    accessWidenerPath = project(":common").loom.accessWidenerPath
}

configurations {
    common {
        canBeResolved = true
        canBeConsumed = false
    }
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentFabric.extendsFrom common

    // Files in this configuration will be bundled into your mod using the Shadow plugin.
    // Don't use the `shadow` configuration from the plugin itself as it's meant for excluding files.
    shadowBundle {
        canBeResolved = true
        canBeConsumed = false
    }
}

dependencies {
    modImplementation "net.fabricmc:fabric-loader:$rootProject.fabric_loader_version"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:$rootProject.fabric_api_version"

    // Architectury API. This is optional, and you can comment it out if you don't need it.
    modImplementation "dev.architectury:architectury-fabric:$rootProject.architectury_api_version"

    common(project(path: ':common', configuration: 'namedElements')) { transitive false }
    shadowBundle project(path: ':common', configuration: 'transformProductionFabric')

    common(project(path: ":fabric-like", configuration: "namedElements")) { transitive false }
    shadowBundle(project(path: ":fabric-like", configuration: "transformProductionFabric"))

    modImplementation("com.terraformersmc:modmenu:${rootProject.mod_menu_version}") { transitive = false }
    modImplementation("me.shedaniel.cloth:cloth-config:${rootProject.cloth_config_version}")
    modImplementation("me.shedaniel.cloth:cloth-config-fabric:${rootProject.cloth_config_version}") { transitive = false }

    modImplementation("com.misterpemodder:shulkerboxtooltip-fabric:${rootProject.shulker_box_tooltip_version}") { transitive false }


    //modImplementation "net.kyrptonaught:kyrptconfig:${project.kyrptconfig_version}"
    //modImplementation "net.kyrptonaught:shulkerutils:${project.shulkerutils_version}"
    //modCompileOnly modRuntimeOnly("curse.maven:quick-shulker-${rootProject.curse_quickshulker_file}:4592296") { transitive false }
}

processResources {
    inputs.property 'version', project.version

    filesMatching('fabric.mod.json') {
        expand version: project.version
    }
}

shadowJar {
    configurations = [project.configurations.shadowBundle]
    archiveClassifier = 'dev-shadow'
}

remapJar {
    inputFile.set shadowJar.archiveFile
}
